version: '3.8'

services:
  mysqldb:
    platform: linux/x86_64
    image: mysql:5.7
    restart: unless-stopped
    env_file: ./.env
    container_name: mysqldb
    command: --max_allowed_packet=32505856
    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQLDB_ROOT_PASSWORD
      - MYSQL_DATABASE=$MYSQLDB_DATABASE
    ports:
      - $MYSQLDB_LOCAL_PORT:$MYSQLDB_DOCKER_PORT
    volumes:
      - db:/var/lib/mysql
  nodeapp:
    depends_on:
      - mysqldb
    image: kosolapovr/food-recipes-be:main
    command: ["./wait-for-it.sh", "mysqldb:${MYSQLDB_DOCKER_PORT}", "--", "npm", "run", "start"]

    restart: unless-stopped
    env_file: ./.env
    ports:
      - $NODE_DOCKER_PORT:$NODE_DOCKER_PORT
    volumes:
      - ./server/src:/usr/nodeapp/src
    environment:
      - DB_HOST=mysqldb
      - DB_USER=$MYSQLDB_USER
      - DB_PASSWORD=$MYSQLDB_ROOT_PASSWORD
      - DB_NAME=$MYSQLDB_DATABASE
      - DB_PORT=$MYSQLDB_DOCKER_PORT
    stdin_open: true
    tty: true
  cms:
    depends_on:
      - nodeapp
    image: kosolapovr/food-recipes-cms-fe:main
    restart: on-failure
    command: ["npm", "run", "build"]
    volumes:
      - static_cms:/usr/cms/dist
    environment:
      - NODE_ENV=production
  web:
    depends_on:
      - nodeapp
    image: kosolapovr/food-recipes-web:main
    restart: on-failure
    ports:
      - $WEB_APP_PORT:$WEB_APP_PORT
    environment:
      - NODE_ENV=production
  nginx:
    restart: always
    build:
      context: ./nginx
    depends_on:
      - cms
      - web
    ports:
      - "80:80"
    volumes:
      - ./src/root:/etc/nginx/html
      - static_cms:/etc/nginx/html/cms
volumes:
  db:
  static_cms:
